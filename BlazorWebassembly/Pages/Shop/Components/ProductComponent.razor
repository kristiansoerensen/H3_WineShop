@inject NavigationManager Navigation
@inject IImageHttpRepository _ImageRepository
@inject IProductHttpRepository _productRepository

<div class="card product-item border-0 mb-4">
    <a asp-page="/Shop/Details" asp-route-id="@Product.Id">
        <div class="card-header product-img position-relative overflow-hidden bg-transparent border p-0">
            @if (Images.Count() > 0)
            {
                <img class="img-fluid w-100" src="/img/placeholder.png" alt="">
            }
            else
            {
                <img class="img-fluid w-100" src="/img/placeholder.png" alt="">
            }
        </div>
        <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
            <h6 class="text-truncate mb-3">@Product.Name</h6>
            <div class="d-flex justify-content-center">
                <h6>$@Product.Price</h6><h6 class="text-muted ml-2"></h6>
            </div>
        </div>
        <div class="card-footer d-flex justify-content-between bg-light border">
            <button type="button" @onclick="() => NavigatoToProductDetail()" class="btn btn-sm text-dark p-0"><i class="fas fa-eye text-primary mr-1"></i>View Detail</button>
            <button type="button" @onclick="() => AddToCart()" class="btn btn-sm text-dark p-0"><i class="fas fa-shopping-cart text-primary mr-1"></i>Add To Cart</button>
            @*<a asp-page="./Cart" class="btn btn-sm text-dark p-0"><i class="fas fa-shopping-cart text-primary mr-1"></i>Add To Cart</a>*@
        </div>
    </a>
</div>

@code {
    [Parameter]
    public ProductDTO Product { get; set; } = new ProductDTO();
    public List<ImageDTO> Images { get; set; } = new List<ImageDTO>();

    void AddToCart()
    {
        Navigation.NavigateTo("/shop/product/" + Product.Id);
    }

    void NavigatoToProductDetail()
    {
        Navigation.NavigateTo("/shop/product/" + Product.Id);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Product.Images = await _ImageRepository.GetImages(Product.ImageIds);
    }
}
